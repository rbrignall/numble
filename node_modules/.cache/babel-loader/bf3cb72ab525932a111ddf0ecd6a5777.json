{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { useRef } from 'react';\nimport { render } from '../../utils/render.esm.js';\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete.esm.js';\nimport { useFocusTrap, Features } from '../../hooks/use-focus-trap.esm.js';\nvar DEFAULT_FOCUS_TRAP_TAG = 'div';\n\nfunction FocusTrap(props) {\n  var container = useRef(null);\n\n  var initialFocus = props.initialFocus,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"initialFocus\"]);\n\n  var ready = useServerHandoffComplete();\n  useFocusTrap(container, ready ? Features.All : Features.None, {\n    initialFocus: initialFocus\n  });\n  var propsWeControl = {\n    ref: container\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    defaultTag: DEFAULT_FOCUS_TRAP_TAG,\n    name: 'FocusTrap'\n  });\n}\n\nexport { FocusTrap };","map":{"version":3,"sources":["/Users/rbrignall/Documents/GitHub/numble/node_modules/@headlessui/react/src/components/focus-trap/focus-trap.tsx"],"names":["DEFAULT_FOCUS_TRAP_TAG","FocusTrap","props","container","useRef","initialFocus","passthroughProps","ready","useServerHandoffComplete","useFocusTrap","FocusTrapFeatures","propsWeControl","ref","render","defaultTag","name"],"mappings":";;;;;AAaA,IAAIA,sBAAsB,GAA1B,KAAA;;SAEgBC,S,CACdC,K,EAAAA;AAEA,MAAIC,SAAS,GAAGC,MAAM,CAAtB,IAAsB,CAAtB;;MACMC,YAAAA,GAAsCH,KAAAA,CAAtCG,Y;MAAiBC,gBAAAA,GAAAA,6BAAAA,CAAqBJ,KAArBI,EAAqBJ,CAAAA,cAAAA,CAArBI,C;;AAEvB,MAAIC,KAAK,GAAGC,wBAAZ,EAAA;AACAC,EAAAA,YAAY,CAAA,SAAA,EAAYF,KAAK,GAAGG,QAAiB,CAApB,GAAA,GAA2BA,QAAiB,CAA7D,IAAA,EAAoE;AAAEL,IAAAA,YAAY,EAAZA;AAAF,GAApE,CAAZI;AAEA,MAAIE,cAAc,GAAG;AACnBC,IAAAA,GAAG,EAAET;AADc,GAArB;AAIA,SAAOU,MAAM,CAAC;AACZX,IAAAA,KAAK,EAAA,QAAA,CAAA,EAAA,EAAA,gBAAA,EADO,cACP,CADO;AAEZY,IAAAA,UAAU,EAFE,sBAAA;AAGZC,IAAAA,IAAI,EAAE;AAHM,GAAD,CAAb;AAKD","sourcesContent":["import {\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useFocusTrap, Features as FocusTrapFeatures } from '../../hooks/use-focus-trap'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\nlet DEFAULT_FOCUS_TRAP_TAG = 'div' as const\n\nexport function FocusTrap<TTag extends ElementType = typeof DEFAULT_FOCUS_TRAP_TAG>(\n  props: Props<TTag> & { initialFocus?: MutableRefObject<HTMLElement | null> }\n) {\n  let container = useRef<HTMLElement | null>(null)\n  let { initialFocus, ...passthroughProps } = props\n\n  let ready = useServerHandoffComplete()\n  useFocusTrap(container, ready ? FocusTrapFeatures.All : FocusTrapFeatures.None, { initialFocus })\n\n  let propsWeControl = {\n    ref: container,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    defaultTag: DEFAULT_FOCUS_TRAP_TAG,\n    name: 'FocusTrap',\n  })\n}\n"]},"metadata":{},"sourceType":"module"}