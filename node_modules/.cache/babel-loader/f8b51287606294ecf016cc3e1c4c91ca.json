{"ast":null,"code":"import { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useMemo, useCallback, createContext, useState, useContext } from 'react';\nimport { render } from '../../utils/render.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nvar DescriptionContext = /*#__PURE__*/createContext(null);\n\nfunction useDescriptionContext() {\n  var context = useContext(DescriptionContext);\n\n  if (context === null) {\n    var err = new Error('You used a <Description /> component, but it is not inside a relevant parent.');\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDescriptionContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction useDescriptions() {\n  var _useState = useState([]),\n      descriptionIds = _useState[0],\n      setDescriptionIds = _useState[1];\n\n  return [// The actual id's as string or undefined\n  descriptionIds.length > 0 ? descriptionIds.join(' ') : undefined, // The provider component\n  useMemo(function () {\n    return function DescriptionProvider(props) {\n      var register = useCallback(function (value) {\n        setDescriptionIds(function (existing) {\n          return [].concat(existing, [value]);\n        });\n        return function () {\n          return setDescriptionIds(function (existing) {\n            var clone = existing.slice();\n            var idx = clone.indexOf(value);\n            if (idx !== -1) clone.splice(idx, 1);\n            return clone;\n          });\n        };\n      }, []);\n      var contextBag = useMemo(function () {\n        return {\n          register: register,\n          slot: props.slot,\n          name: props.name,\n          props: props.props\n        };\n      }, [register, props.slot, props.name, props.props]);\n      return React.createElement(DescriptionContext.Provider, {\n        value: contextBag\n      }, props.children);\n    };\n  }, [setDescriptionIds])];\n} // ---\n\n\nvar DEFAULT_DESCRIPTION_TAG = 'p';\n\nfunction Description(props) {\n  var context = useDescriptionContext();\n  var id = \"headlessui-description-\" + useId();\n  useIsoMorphicEffect(function () {\n    return context.register(id);\n  }, [id, context.register]);\n  var passThroughProps = props;\n\n  var propsWeControl = _extends({}, context.props, {\n    id: id\n  });\n\n  return render({\n    props: _extends({}, passThroughProps, propsWeControl),\n    slot: context.slot || {},\n    defaultTag: DEFAULT_DESCRIPTION_TAG,\n    name: context.name || 'Description'\n  });\n}\n\nexport { Description, useDescriptions };","map":{"version":3,"sources":["/Users/rbrignall/Documents/GitHub/numble/node_modules/@headlessui/react/src/components/description/description.tsx"],"names":["DescriptionContext","createContext","context","useContext","err","Error","useDescriptions","descriptionIds","setDescriptionIds","useState","useMemo","register","useCallback","clone","existing","idx","contextBag","slot","props","name","value","DEFAULT_DESCRIPTION_TAG","Description","useDescriptionContext","id","useId","useIsoMorphicEffect","passThroughProps","propsWeControl","render","defaultTag"],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet DescriptionContext = createContext<\n  ({ register(value: string): () => void } & SharedData) | null\n>(null)\n\nfunction useDescriptionContext() {\n  let context = useContext(DescriptionContext)\n  if (context === null) {\n    let err = new Error(\n      'You used a <Description /> component, but it is not inside a relevant parent.'\n    )\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDescriptionContext)\n    throw err\n  }\n  return context\n}\n\ninterface DescriptionProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useDescriptions(): [\n  string | undefined,\n  (props: DescriptionProviderProps) => JSX.Element\n] {\n  let [descriptionIds, setDescriptionIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined\n    descriptionIds.length > 0 ? descriptionIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function DescriptionProvider(props: DescriptionProviderProps) {\n        let register = useCallback((value: string) => {\n          setDescriptionIds(existing => [...existing, value])\n\n          return () =>\n            setDescriptionIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return (\n          <DescriptionContext.Provider value={contextBag}>\n            {props.children}\n          </DescriptionContext.Provider>\n        )\n      }\n    }, [setDescriptionIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_DESCRIPTION_TAG = 'p' as const\ninterface DescriptionRenderPropArg {}\ntype DescriptionPropsWeControl = 'id'\n\nexport function Description<TTag extends ElementType = typeof DEFAULT_DESCRIPTION_TAG>(\n  props: Props<TTag, DescriptionRenderPropArg, DescriptionPropsWeControl>\n) {\n  let context = useDescriptionContext()\n  let id = `headlessui-description-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let passThroughProps = props\n  let propsWeControl = { ...context.props, id }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot: context.slot || {},\n    defaultTag: DEFAULT_DESCRIPTION_TAG,\n    name: context.name || 'Description',\n  })\n}\n"]},"metadata":{},"sourceType":"module"}