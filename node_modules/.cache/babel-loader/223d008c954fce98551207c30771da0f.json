{"ast":null,"code":"import { useState, useRef } from 'react';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\n\nfunction useComputed(cb, dependencies) {\n  var _useState = useState(cb),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var cbRef = useRef(cb);\n  useIsoMorphicEffect(function () {\n    cbRef.current = cb;\n  }, [cb]);\n  useIsoMorphicEffect(function () {\n    return setValue(cbRef.current);\n  }, [cbRef, setValue].concat(dependencies));\n  return value;\n}\n\nexport { useComputed };","map":{"version":3,"sources":["/Users/rbrignall/Documents/GitHub/numble/node_modules/@headlessui/react/src/hooks/use-computed.ts"],"names":["useComputed","cb","dependencies","value","setValue","useState","cbRef","useRef","useIsoMorphicEffect"],"mappings":";;;SAGgBA,W,CAAeC,E,EAAaC,Y,EAAAA;kBAClBG,QAAQ,CAAA,EAAA,C;MAA3BF,KAAAA,GAAAA,SAAAA,CAAAA,CAAAA,C;MAAOC,QAAAA,GAAAA,SAAAA,CAAAA,CAAAA,C;;AACZ,MAAIE,KAAK,GAAGC,MAAM,CAAlB,EAAkB,CAAlB;AACAC,EAAAA,mBAAmB,CAAC,YAAA;AAClBF,IAAAA,KAAK,CAALA,OAAAA,GAAAA,EAAAA;AADiB,GAAA,EAEhB,CAFHE,EAEG,CAFgB,CAAnBA;AAGAA,EAAAA,mBAAmB,CAAC,YAAA;AAAA,WAAMJ,QAAQ,CAACE,KAAK,CAApB,OAAc,CAAd;AAAD,GAAA,EAAA,CAAA,KAAA,EAAA,QAAA,EAAA,MAAA,CAAnBE,YAAmB,CAAA,CAAnBA;AACA,SAAA,KAAA;AACD","sourcesContent":["import { useState, useRef } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nexport function useComputed<T>(cb: () => T, dependencies: React.DependencyList) {\n  let [value, setValue] = useState(cb)\n  let cbRef = useRef(cb)\n  useIsoMorphicEffect(() => {\n    cbRef.current = cb\n  }, [cb])\n  useIsoMorphicEffect(() => setValue(cbRef.current), [cbRef, setValue, ...dependencies])\n  return value\n}\n"]},"metadata":{},"sourceType":"module"}