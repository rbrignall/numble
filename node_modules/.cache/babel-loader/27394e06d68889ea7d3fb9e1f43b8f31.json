{"ast":null,"code":"import { getGuessStatuses } from './statuses';\nimport { solutionIndex } from './words';\nexport const shareStatus = guesses => {\n  navigator.clipboard.writeText('Wordle ' + solutionIndex + ' ' + guesses.length + '/6\\n\\n' + generateEmojiGrid(guesses));\n};\nexport const generateEmojiGrid = guesses => {\n  return guesses.map(guess => {\n    const status = getGuessStatuses(guess);\n    return guess.split('').map((letter, i) => {\n      switch (status[i]) {\n        case 'correct':\n          return 'ğŸŸ©';\n\n        case 'present':\n          return 'ğŸŸ¨';\n\n        default:\n          return 'â¬œ';\n      }\n    }).join('');\n  }).join('\\n');\n};","map":{"version":3,"sources":["/Users/rbrignall/Documents/GitHub/numble/src/lib/share.ts"],"names":["getGuessStatuses","solutionIndex","shareStatus","guesses","navigator","clipboard","writeText","length","generateEmojiGrid","map","guess","status","split","letter","i","join"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,YAAjC;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,OAAO,MAAMC,WAAW,GAAIC,OAAD,IAAuB;AAChDC,EAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CACE,YACEL,aADF,GAEE,GAFF,GAGEE,OAAO,CAACI,MAHV,GAIE,QAJF,GAKEC,iBAAiB,CAACL,OAAD,CANrB;AAQD,CATM;AAWP,OAAO,MAAMK,iBAAiB,GAAIL,OAAD,IAAuB;AACtD,SAAOA,OAAO,CACXM,GADI,CACCC,KAAD,IAAW;AACd,UAAMC,MAAM,GAAGX,gBAAgB,CAACU,KAAD,CAA/B;AACA,WAAOA,KAAK,CACTE,KADI,CACE,EADF,EAEJH,GAFI,CAEA,CAACI,MAAD,EAASC,CAAT,KAAe;AAClB,cAAQH,MAAM,CAACG,CAAD,CAAd;AACE,aAAK,SAAL;AACE,iBAAO,IAAP;;AACF,aAAK,SAAL;AACE,iBAAO,IAAP;;AACF;AACE,iBAAO,GAAP;AANJ;AAQD,KAXI,EAYJC,IAZI,CAYC,EAZD,CAAP;AAaD,GAhBI,EAiBJA,IAjBI,CAiBC,IAjBD,CAAP;AAkBD,CAnBM","sourcesContent":["import { getGuessStatuses } from './statuses'\nimport { solutionIndex } from './words'\n\nexport const shareStatus = (guesses: string[]) => {\n  navigator.clipboard.writeText(\n    'Wordle ' +\n      solutionIndex +\n      ' ' +\n      guesses.length +\n      '/6\\n\\n' +\n      generateEmojiGrid(guesses)\n  )\n}\n\nexport const generateEmojiGrid = (guesses: string[]) => {\n  return guesses\n    .map((guess) => {\n      const status = getGuessStatuses(guess)\n      return guess\n        .split('')\n        .map((letter, i) => {\n          switch (status[i]) {\n            case 'correct':\n              return 'ğŸŸ©'\n            case 'present':\n              return 'ğŸŸ¨'\n            default:\n              return 'â¬œ'\n          }\n        })\n        .join('')\n    })\n    .join('\\n')\n}\n"]},"metadata":{},"sourceType":"module"}