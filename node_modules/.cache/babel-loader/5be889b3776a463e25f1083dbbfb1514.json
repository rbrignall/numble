{"ast":null,"code":"import { extends as _extends, objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useReducer, createRef, useMemo, createContext, useCallback, useRef, useContext, Fragment } from 'react';\nimport { match } from '../../utils/match.esm.js';\nimport { render, forwardRefWithAs, Features } from '../../utils/render.esm.js';\nimport { useSyncRefs } from '../../hooks/use-sync-refs.esm.js';\nimport { Keys } from '../keyboard.esm.js';\nimport { isDisabledReactIssue7711 } from '../../utils/bugs.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management.esm.js';\nimport { useWindowEvent } from '../../hooks/use-window-event.esm.js';\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed.esm.js';\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type.esm.js';\nimport { disposables } from '../../utils/disposables.esm.js';\nimport { useDisposables } from '../../hooks/use-disposables.esm.js';\nimport { useComputed } from '../../hooks/use-computed.esm.js';\nimport { calculateActiveIndex, Focus } from '../../utils/calculate-active-index.esm.js';\n\nvar _reducers;\n\nvar ListboxStates;\n\n(function (ListboxStates) {\n  ListboxStates[ListboxStates[\"Open\"] = 0] = \"Open\";\n  ListboxStates[ListboxStates[\"Closed\"] = 1] = \"Closed\";\n})(ListboxStates || (ListboxStates = {}));\n\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"OpenListbox\"] = 0] = \"OpenListbox\";\n  ActionTypes[ActionTypes[\"CloseListbox\"] = 1] = \"CloseListbox\";\n  ActionTypes[ActionTypes[\"SetDisabled\"] = 2] = \"SetDisabled\";\n  ActionTypes[ActionTypes[\"SetOrientation\"] = 3] = \"SetOrientation\";\n  ActionTypes[ActionTypes[\"GoToOption\"] = 4] = \"GoToOption\";\n  ActionTypes[ActionTypes[\"Search\"] = 5] = \"Search\";\n  ActionTypes[ActionTypes[\"ClearSearch\"] = 6] = \"ClearSearch\";\n  ActionTypes[ActionTypes[\"RegisterOption\"] = 7] = \"RegisterOption\";\n  ActionTypes[ActionTypes[\"UnregisterOption\"] = 8] = \"UnregisterOption\";\n})(ActionTypes || (ActionTypes = {}));\n\nvar reducers = (_reducers = {}, _reducers[ActionTypes.CloseListbox] = function (state) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  return _extends({}, state, {\n    activeOptionIndex: null,\n    listboxState: ListboxStates.Closed\n  });\n}, _reducers[ActionTypes.OpenListbox] = function (state) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Open) return state;\n  return _extends({}, state, {\n    listboxState: ListboxStates.Open\n  });\n}, _reducers[ActionTypes.SetDisabled] = function (state, action) {\n  if (state.disabled === action.disabled) return state;\n  return _extends({}, state, {\n    disabled: action.disabled\n  });\n}, _reducers[ActionTypes.SetOrientation] = function (state, action) {\n  if (state.orientation === action.orientation) return state;\n  return _extends({}, state, {\n    orientation: action.orientation\n  });\n}, _reducers[ActionTypes.GoToOption] = function (state, action) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  var activeOptionIndex = calculateActiveIndex(action, {\n    resolveItems: function resolveItems() {\n      return state.options;\n    },\n    resolveActiveIndex: function resolveActiveIndex() {\n      return state.activeOptionIndex;\n    },\n    resolveId: function resolveId(item) {\n      return item.id;\n    },\n    resolveDisabled: function resolveDisabled(item) {\n      return item.dataRef.current.disabled;\n    }\n  });\n  if (state.searchQuery === '' && state.activeOptionIndex === activeOptionIndex) return state;\n  return _extends({}, state, {\n    searchQuery: '',\n    activeOptionIndex: activeOptionIndex\n  });\n}, _reducers[ActionTypes.Search] = function (state, action) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  var searchQuery = state.searchQuery + action.value.toLowerCase();\n  var match = state.options.findIndex(function (option) {\n    var _option$dataRef$curre;\n\n    return !option.dataRef.current.disabled && ((_option$dataRef$curre = option.dataRef.current.textValue) == null ? void 0 : _option$dataRef$curre.startsWith(searchQuery));\n  });\n  if (match === -1 || match === state.activeOptionIndex) return _extends({}, state, {\n    searchQuery: searchQuery\n  });\n  return _extends({}, state, {\n    searchQuery: searchQuery,\n    activeOptionIndex: match\n  });\n}, _reducers[ActionTypes.ClearSearch] = function (state) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  if (state.searchQuery === '') return state;\n  return _extends({}, state, {\n    searchQuery: ''\n  });\n}, _reducers[ActionTypes.RegisterOption] = function (state, action) {\n  return _extends({}, state, {\n    options: [].concat(state.options, [{\n      id: action.id,\n      dataRef: action.dataRef\n    }])\n  });\n}, _reducers[ActionTypes.UnregisterOption] = function (state, action) {\n  var nextOptions = state.options.slice();\n  var currentActiveOption = state.activeOptionIndex !== null ? nextOptions[state.activeOptionIndex] : null;\n  var idx = nextOptions.findIndex(function (a) {\n    return a.id === action.id;\n  });\n  if (idx !== -1) nextOptions.splice(idx, 1);\n  return _extends({}, state, {\n    options: nextOptions,\n    activeOptionIndex: function () {\n      if (idx === state.activeOptionIndex) return null;\n      if (currentActiveOption === null) return null; // If we removed the option before the actual active index, then it would be out of sync. To\n      // fix this, we will find the correct (new) index position.\n\n      return nextOptions.indexOf(currentActiveOption);\n    }()\n  });\n}, _reducers);\nvar ListboxContext = /*#__PURE__*/createContext(null);\nListboxContext.displayName = 'ListboxContext';\n\nfunction useListboxContext(component) {\n  var context = useContext(ListboxContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Listbox.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction stateReducer(state, action) {\n  return match(action.type, reducers, state, action);\n} // ---\n\n\nvar DEFAULT_LISTBOX_TAG = Fragment;\n\nfunction Listbox(props) {\n  var _match;\n\n  var value = props.value,\n      onChange = props.onChange,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$horizontal = props.horizontal,\n      horizontal = _props$horizontal === void 0 ? false : _props$horizontal,\n      passThroughProps = _objectWithoutPropertiesLoose(props, [\"value\", \"onChange\", \"disabled\", \"horizontal\"]);\n\n  var orientation = horizontal ? 'horizontal' : 'vertical';\n  var reducerBag = useReducer(stateReducer, {\n    listboxState: ListboxStates.Closed,\n    propsRef: {\n      current: {\n        value: value,\n        onChange: onChange\n      }\n    },\n    labelRef: createRef(),\n    buttonRef: createRef(),\n    optionsRef: createRef(),\n    disabled: disabled,\n    orientation: orientation,\n    options: [],\n    searchQuery: '',\n    activeOptionIndex: null\n  });\n  var _reducerBag$ = reducerBag[0],\n      listboxState = _reducerBag$.listboxState,\n      propsRef = _reducerBag$.propsRef,\n      optionsRef = _reducerBag$.optionsRef,\n      buttonRef = _reducerBag$.buttonRef,\n      dispatch = reducerBag[1];\n  useIsoMorphicEffect(function () {\n    propsRef.current.value = value;\n  }, [value, propsRef]);\n  useIsoMorphicEffect(function () {\n    propsRef.current.onChange = onChange;\n  }, [onChange, propsRef]);\n  useIsoMorphicEffect(function () {\n    return dispatch({\n      type: ActionTypes.SetDisabled,\n      disabled: disabled\n    });\n  }, [disabled]);\n  useIsoMorphicEffect(function () {\n    return dispatch({\n      type: ActionTypes.SetOrientation,\n      orientation: orientation\n    });\n  }, [orientation]); // Handle outside click\n\n  useWindowEvent('mousedown', function (event) {\n    var _buttonRef$current, _optionsRef$current;\n\n    var target = event.target;\n    if (listboxState !== ListboxStates.Open) return;\n    if ((_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.contains(target)) return;\n    if ((_optionsRef$current = optionsRef.current) == null ? void 0 : _optionsRef$current.contains(target)) return;\n    dispatch({\n      type: ActionTypes.CloseListbox\n    });\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      var _buttonRef$current2;\n\n      event.preventDefault();\n      (_buttonRef$current2 = buttonRef.current) == null ? void 0 : _buttonRef$current2.focus();\n    }\n  });\n  var slot = useMemo(function () {\n    return {\n      open: listboxState === ListboxStates.Open,\n      disabled: disabled\n    };\n  }, [listboxState, disabled]);\n  return React.createElement(ListboxContext.Provider, {\n    value: reducerBag\n  }, React.createElement(OpenClosedProvider, {\n    value: match(listboxState, (_match = {}, _match[ListboxStates.Open] = State.Open, _match[ListboxStates.Closed] = State.Closed, _match))\n  }, render({\n    props: passThroughProps,\n    slot: slot,\n    defaultTag: DEFAULT_LISTBOX_TAG,\n    name: 'Listbox'\n  })));\n} // ---\n\n\nvar DEFAULT_BUTTON_TAG = 'button';\nvar Button = /*#__PURE__*/forwardRefWithAs(function Button(props, ref) {\n  var _state$optionsRef$cur;\n\n  var _useListboxContext = useListboxContext([Listbox.name, Button.name].join('.')),\n      state = _useListboxContext[0],\n      dispatch = _useListboxContext[1];\n\n  var buttonRef = useSyncRefs(state.buttonRef, ref);\n  var id = \"headlessui-listbox-button-\" + useId();\n  var d = useDisposables();\n  var handleKeyDown = useCallback(function (event) {\n    switch (event.key) {\n      // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n      case Keys.Space:\n      case Keys.Enter:\n      case Keys.ArrowDown:\n        event.preventDefault();\n        dispatch({\n          type: ActionTypes.OpenListbox\n        });\n        d.nextFrame(function () {\n          if (!state.propsRef.current.value) dispatch({\n            type: ActionTypes.GoToOption,\n            focus: Focus.First\n          });\n        });\n        break;\n\n      case Keys.ArrowUp:\n        event.preventDefault();\n        dispatch({\n          type: ActionTypes.OpenListbox\n        });\n        d.nextFrame(function () {\n          if (!state.propsRef.current.value) dispatch({\n            type: ActionTypes.GoToOption,\n            focus: Focus.Last\n          });\n        });\n        break;\n    }\n  }, [dispatch, state, d]);\n  var handleKeyUp = useCallback(function (event) {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault();\n        break;\n    }\n  }, []);\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault();\n\n    if (state.listboxState === ListboxStates.Open) {\n      dispatch({\n        type: ActionTypes.CloseListbox\n      });\n      d.nextFrame(function () {\n        var _state$buttonRef$curr;\n\n        return (_state$buttonRef$curr = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr.focus({\n          preventScroll: true\n        });\n      });\n    } else {\n      event.preventDefault();\n      dispatch({\n        type: ActionTypes.OpenListbox\n      });\n    }\n  }, [dispatch, d, state]);\n  var labelledby = useComputed(function () {\n    if (!state.labelRef.current) return undefined;\n    return [state.labelRef.current.id, id].join(' ');\n  }, [state.labelRef.current, id]);\n  var slot = useMemo(function () {\n    return {\n      open: state.listboxState === ListboxStates.Open,\n      disabled: state.disabled\n    };\n  }, [state]);\n  var passthroughProps = props;\n  var propsWeControl = {\n    ref: buttonRef,\n    id: id,\n    type: useResolveButtonType(props, state.buttonRef),\n    'aria-haspopup': true,\n    'aria-controls': (_state$optionsRef$cur = state.optionsRef.current) == null ? void 0 : _state$optionsRef$cur.id,\n    'aria-expanded': state.disabled ? undefined : state.listboxState === ListboxStates.Open,\n    'aria-labelledby': labelledby,\n    disabled: state.disabled,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Listbox.Button'\n  });\n}); // ---\n\nvar DEFAULT_LABEL_TAG = 'label';\n\nfunction Label(props) {\n  var _useListboxContext2 = useListboxContext([Listbox.name, Label.name].join('.')),\n      state = _useListboxContext2[0];\n\n  var id = \"headlessui-listbox-label-\" + useId();\n  var handleClick = useCallback(function () {\n    var _state$buttonRef$curr2;\n\n    return (_state$buttonRef$curr2 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr2.focus({\n      preventScroll: true\n    });\n  }, [state.buttonRef]);\n  var slot = useMemo(function () {\n    return {\n      open: state.listboxState === ListboxStates.Open,\n      disabled: state.disabled\n    };\n  }, [state]);\n  var propsWeControl = {\n    ref: state.labelRef,\n    id: id,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, props, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: 'Listbox.Label'\n  });\n} // ---\n\n\nvar DEFAULT_OPTIONS_TAG = 'ul';\nvar OptionsRenderFeatures = Features.RenderStrategy | Features.Static;\nvar Options = /*#__PURE__*/forwardRefWithAs(function Options(props, ref) {\n  var _state$options$state$;\n\n  var _useListboxContext3 = useListboxContext([Listbox.name, Options.name].join('.')),\n      state = _useListboxContext3[0],\n      dispatch = _useListboxContext3[1];\n\n  var optionsRef = useSyncRefs(state.optionsRef, ref);\n  var id = \"headlessui-listbox-options-\" + useId();\n  var d = useDisposables();\n  var searchDisposables = useDisposables();\n  var usesOpenClosedState = useOpenClosed();\n\n  var visible = function () {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open;\n    }\n\n    return state.listboxState === ListboxStates.Open;\n  }();\n\n  useIsoMorphicEffect(function () {\n    var container = state.optionsRef.current;\n    if (!container) return;\n    if (state.listboxState !== ListboxStates.Open) return;\n    if (container === document.activeElement) return;\n    container.focus({\n      preventScroll: true\n    });\n  }, [state.listboxState, state.optionsRef]);\n  var handleKeyDown = useCallback(function (event) {\n    searchDisposables.dispose();\n\n    switch (event.key) {\n      // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n      // @ts-expect-error Fallthrough is expected here\n      case Keys.Space:\n        if (state.searchQuery !== '') {\n          event.preventDefault();\n          event.stopPropagation();\n          return dispatch({\n            type: ActionTypes.Search,\n            value: event.key\n          });\n        }\n\n      // When in type ahead mode, fallthrough\n\n      case Keys.Enter:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes.CloseListbox\n        });\n\n        if (state.activeOptionIndex !== null) {\n          var dataRef = state.options[state.activeOptionIndex].dataRef;\n          state.propsRef.current.onChange(dataRef.current.value);\n        }\n\n        disposables().nextFrame(function () {\n          var _state$buttonRef$curr3;\n\n          return (_state$buttonRef$curr3 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr3.focus({\n            preventScroll: true\n          });\n        });\n        break;\n\n      case match(state.orientation, {\n        vertical: Keys.ArrowDown,\n        horizontal: Keys.ArrowRight\n      }):\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes.GoToOption,\n          focus: Focus.Next\n        });\n\n      case match(state.orientation, {\n        vertical: Keys.ArrowUp,\n        horizontal: Keys.ArrowLeft\n      }):\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes.GoToOption,\n          focus: Focus.Previous\n        });\n\n      case Keys.Home:\n      case Keys.PageUp:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes.GoToOption,\n          focus: Focus.First\n        });\n\n      case Keys.End:\n      case Keys.PageDown:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes.GoToOption,\n          focus: Focus.Last\n        });\n\n      case Keys.Escape:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes.CloseListbox\n        });\n        return d.nextFrame(function () {\n          var _state$buttonRef$curr4;\n\n          return (_state$buttonRef$curr4 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr4.focus({\n            preventScroll: true\n          });\n        });\n\n      case Keys.Tab:\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n\n      default:\n        if (event.key.length === 1) {\n          dispatch({\n            type: ActionTypes.Search,\n            value: event.key\n          });\n          searchDisposables.setTimeout(function () {\n            return dispatch({\n              type: ActionTypes.ClearSearch\n            });\n          }, 350);\n        }\n\n        break;\n    }\n  }, [d, dispatch, searchDisposables, state]);\n  var labelledby = useComputed(function () {\n    var _state$labelRef$curre, _state$labelRef$curre2, _state$buttonRef$curr5;\n\n    return (_state$labelRef$curre = (_state$labelRef$curre2 = state.labelRef.current) == null ? void 0 : _state$labelRef$curre2.id) != null ? _state$labelRef$curre : (_state$buttonRef$curr5 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr5.id;\n  }, [state.labelRef.current, state.buttonRef.current]);\n  var slot = useMemo(function () {\n    return {\n      open: state.listboxState === ListboxStates.Open\n    };\n  }, [state]);\n  var propsWeControl = {\n    'aria-activedescendant': state.activeOptionIndex === null ? undefined : (_state$options$state$ = state.options[state.activeOptionIndex]) == null ? void 0 : _state$options$state$.id,\n    'aria-labelledby': labelledby,\n    'aria-orientation': state.orientation,\n    id: id,\n    onKeyDown: handleKeyDown,\n    role: 'listbox',\n    tabIndex: 0,\n    ref: optionsRef\n  };\n  var passthroughProps = props;\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OPTIONS_TAG,\n    features: OptionsRenderFeatures,\n    visible: visible,\n    name: 'Listbox.Options'\n  });\n}); // ---\n\nvar DEFAULT_OPTION_TAG = 'li';\n\nfunction Option(props) {\n  var _props$disabled2 = props.disabled,\n      disabled = _props$disabled2 === void 0 ? false : _props$disabled2,\n      value = props.value,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"disabled\", \"value\"]);\n\n  var _useListboxContext4 = useListboxContext([Listbox.name, Option.name].join('.')),\n      state = _useListboxContext4[0],\n      dispatch = _useListboxContext4[1];\n\n  var id = \"headlessui-listbox-option-\" + useId();\n  var active = state.activeOptionIndex !== null ? state.options[state.activeOptionIndex].id === id : false;\n  var selected = state.propsRef.current.value === value;\n  var bag = useRef({\n    disabled: disabled,\n    value: value\n  });\n  useIsoMorphicEffect(function () {\n    bag.current.disabled = disabled;\n  }, [bag, disabled]);\n  useIsoMorphicEffect(function () {\n    bag.current.value = value;\n  }, [bag, value]);\n  useIsoMorphicEffect(function () {\n    var _document$getElementB, _document$getElementB2;\n\n    bag.current.textValue = (_document$getElementB = document.getElementById(id)) == null ? void 0 : (_document$getElementB2 = _document$getElementB.textContent) == null ? void 0 : _document$getElementB2.toLowerCase();\n  }, [bag, id]);\n  var select = useCallback(function () {\n    return state.propsRef.current.onChange(value);\n  }, [state.propsRef, value]);\n  useIsoMorphicEffect(function () {\n    dispatch({\n      type: ActionTypes.RegisterOption,\n      id: id,\n      dataRef: bag\n    });\n    return function () {\n      return dispatch({\n        type: ActionTypes.UnregisterOption,\n        id: id\n      });\n    };\n  }, [bag, id]);\n  useIsoMorphicEffect(function () {\n    var _document$getElementB3;\n\n    if (state.listboxState !== ListboxStates.Open) return;\n    if (!selected) return;\n    dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Specific,\n      id: id\n    });\n    (_document$getElementB3 = document.getElementById(id)) == null ? void 0 : _document$getElementB3.focus == null ? void 0 : _document$getElementB3.focus();\n  }, [state.listboxState]);\n  useIsoMorphicEffect(function () {\n    if (state.listboxState !== ListboxStates.Open) return;\n    if (!active) return;\n    var d = disposables();\n    d.nextFrame(function () {\n      var _document$getElementB4;\n\n      return (_document$getElementB4 = document.getElementById(id)) == null ? void 0 : _document$getElementB4.scrollIntoView == null ? void 0 : _document$getElementB4.scrollIntoView({\n        block: 'nearest'\n      });\n    });\n    return d.dispose;\n  }, [id, active, state.listboxState]);\n  var handleClick = useCallback(function (event) {\n    if (disabled) return event.preventDefault();\n    select();\n    dispatch({\n      type: ActionTypes.CloseListbox\n    });\n    disposables().nextFrame(function () {\n      var _state$buttonRef$curr6;\n\n      return (_state$buttonRef$curr6 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr6.focus({\n        preventScroll: true\n      });\n    });\n  }, [dispatch, state.buttonRef, disabled, select]);\n  var handleFocus = useCallback(function () {\n    if (disabled) return dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Nothing\n    });\n    dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Specific,\n      id: id\n    });\n  }, [disabled, id, dispatch]);\n  var handleMove = useCallback(function () {\n    if (disabled) return;\n    if (active) return;\n    dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Specific,\n      id: id\n    });\n  }, [disabled, active, id, dispatch]);\n  var handleLeave = useCallback(function () {\n    if (disabled) return;\n    if (!active) return;\n    dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Nothing\n    });\n  }, [disabled, active, dispatch]);\n  var slot = useMemo(function () {\n    return {\n      active: active,\n      selected: selected,\n      disabled: disabled\n    };\n  }, [active, selected, disabled]);\n  var propsWeControl = {\n    id: id,\n    role: 'option',\n    tabIndex: disabled === true ? undefined : -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    'aria-selected': selected === true ? true : undefined,\n    disabled: undefined,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OPTION_TAG,\n    name: 'Listbox.Option'\n  });\n} // ---\n\n\nListbox.Button = Button;\nListbox.Label = Label;\nListbox.Options = Options;\nListbox.Option = Option;\nexport { Listbox };","map":{"version":3,"sources":["/Users/rbrignall/Documents/GitHub/numble/node_modules/@headlessui/react/src/components/listbox/listbox.tsx"],"names":["ListboxStates","ActionTypes","reducers","state","activeOptionIndex","listboxState","Closed","Open","action","disabled","orientation","calculateActiveIndex","resolveItems","resolveActiveIndex","resolveId","item","resolveDisabled","searchQuery","match","option","options","id","dataRef","nextOptions","currentActiveOption","idx","a","ListboxContext","createContext","context","useContext","err","Listbox","Error","DEFAULT_LISTBOX_TAG","props","value","onChange","horizontal","passThroughProps","reducerBag","useReducer","propsRef","current","labelRef","createRef","buttonRef","optionsRef","dispatch","useIsoMorphicEffect","type","useWindowEvent","target","event","CloseListbox","isFocusableElement","FocusableMode","slot","useMemo","open","State","render","defaultTag","name","DEFAULT_BUTTON_TAG","Button","forwardRefWithAs","useListboxContext","useSyncRefs","useId","d","useDisposables","handleKeyDown","useCallback","Keys","OpenListbox","focus","Focus","First","Last","handleKeyUp","handleClick","isDisabledReactIssue7711","preventScroll","labelledby","useComputed","passthroughProps","propsWeControl","ref","useResolveButtonType","onKeyDown","onKeyUp","onClick","DEFAULT_LABEL_TAG","Label","DEFAULT_OPTIONS_TAG","OptionsRenderFeatures","Features","Options","searchDisposables","usesOpenClosedState","useOpenClosed","visible","container","document","key","disposables","vertical","ArrowRight","Next","ArrowLeft","Previous","ClearSearch","role","tabIndex","features","DEFAULT_OPTION_TAG","Option","active","selected","bag","useRef","select","block","handleFocus","Nothing","handleMove","handleLeave","onFocus","onPointerMove","onMouseMove","onPointerLeave","onMouseLeave"],"mappings":"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","sourcesContent":["import React, {\n  Fragment,\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useId } from '../../hooks/use-id'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useComputed } from '../../hooks/use-computed'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Props } from '../../types'\nimport { Features, forwardRefWithAs, PropsForFeatures, render } from '../../utils/render'\nimport { match } from '../../utils/match'\nimport { disposables } from '../../utils/disposables'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State, OpenClosedProvider } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\ntype ListboxOptionDataRef = MutableRefObject<{\n  textValue?: string\n  disabled: boolean\n  value: unknown\n}>\n\ninterface StateDefinition {\n  listboxState: ListboxStates\n\n  orientation: 'horizontal' | 'vertical'\n\n  propsRef: MutableRefObject<{ value: unknown; onChange(value: unknown): void }>\n  labelRef: MutableRefObject<HTMLLabelElement | null>\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  optionsRef: MutableRefObject<HTMLUListElement | null>\n\n  disabled: boolean\n  options: { id: string; dataRef: ListboxOptionDataRef }[]\n  searchQuery: string\n  activeOptionIndex: number | null\n}\n\nenum ActionTypes {\n  OpenListbox,\n  CloseListbox,\n\n  SetDisabled,\n  SetOrientation,\n\n  GoToOption,\n  Search,\n  ClearSearch,\n\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseListbox }\n  | { type: ActionTypes.OpenListbox }\n  | { type: ActionTypes.SetDisabled; disabled: boolean }\n  | { type: ActionTypes.SetOrientation; orientation: StateDefinition['orientation'] }\n  | { type: ActionTypes.GoToOption; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToOption; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterOption; id: string; dataRef: ListboxOptionDataRef }\n  | { type: ActionTypes.UnregisterOption; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    return { ...state, activeOptionIndex: null, listboxState: ListboxStates.Closed }\n  },\n  [ActionTypes.OpenListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Open) return state\n    return { ...state, listboxState: ListboxStates.Open }\n  },\n  [ActionTypes.SetDisabled](state, action) {\n    if (state.disabled === action.disabled) return state\n    return { ...state, disabled: action.disabled }\n  },\n  [ActionTypes.SetOrientation](state, action) {\n    if (state.orientation === action.orientation) return state\n    return { ...state, orientation: action.orientation }\n  },\n  [ActionTypes.GoToOption](state, action) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let activeOptionIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.options,\n      resolveActiveIndex: () => state.activeOptionIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeOptionIndex === activeOptionIndex) return state\n    return { ...state, searchQuery: '', activeOptionIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let searchQuery = state.searchQuery + action.value.toLowerCase()\n    let match = state.options.findIndex(\n      option =>\n        !option.dataRef.current.disabled &&\n        option.dataRef.current.textValue?.startsWith(searchQuery)\n    )\n\n    if (match === -1 || match === state.activeOptionIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeOptionIndex: match }\n  },\n  [ActionTypes.ClearSearch](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    if (state.searchQuery === '') return state\n    return { ...state, searchQuery: '' }\n  },\n  [ActionTypes.RegisterOption]: (state, action) => ({\n    ...state,\n    options: [...state.options, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterOption]: (state, action) => {\n    let nextOptions = state.options.slice()\n    let currentActiveOption =\n      state.activeOptionIndex !== null ? nextOptions[state.activeOptionIndex] : null\n\n    let idx = nextOptions.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextOptions.splice(idx, 1)\n\n    return {\n      ...state,\n      options: nextOptions,\n      activeOptionIndex: (() => {\n        if (idx === state.activeOptionIndex) return null\n        if (currentActiveOption === null) return null\n\n        // If we removed the option before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextOptions.indexOf(currentActiveOption)\n      })(),\n    }\n  },\n}\n\nlet ListboxContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nListboxContext.displayName = 'ListboxContext'\n\nfunction useListboxContext(component: string) {\n  let context = useContext(ListboxContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Listbox.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_LISTBOX_TAG = Fragment\ninterface ListboxRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\n\nexport function Listbox<TTag extends ElementType = typeof DEFAULT_LISTBOX_TAG, TType = string>(\n  props: Props<TTag, ListboxRenderPropArg, 'value' | 'onChange'> & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n    horizontal?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, horizontal = false, ...passThroughProps } = props\n  const orientation = horizontal ? 'horizontal' : 'vertical'\n\n  let reducerBag = useReducer(stateReducer, {\n    listboxState: ListboxStates.Closed,\n    propsRef: { current: { value, onChange } },\n    labelRef: createRef(),\n    buttonRef: createRef(),\n    optionsRef: createRef(),\n    disabled,\n    orientation,\n    options: [],\n    searchQuery: '',\n    activeOptionIndex: null,\n  } as StateDefinition)\n  let [{ listboxState, propsRef, optionsRef, buttonRef }, dispatch] = reducerBag\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.onChange = onChange\n  }, [onChange, propsRef])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetDisabled, disabled }), [disabled])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetOrientation, orientation }), [\n    orientation,\n  ])\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (listboxState !== ListboxStates.Open) return\n\n    if (buttonRef.current?.contains(target)) return\n    if (optionsRef.current?.contains(target)) return\n\n    dispatch({ type: ActionTypes.CloseListbox })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      buttonRef.current?.focus()\n    }\n  })\n\n  let slot = useMemo<ListboxRenderPropArg>(\n    () => ({ open: listboxState === ListboxStates.Open, disabled }),\n    [listboxState, disabled]\n  )\n\n  return (\n    <ListboxContext.Provider value={reducerBag}>\n      <OpenClosedProvider\n        value={match(listboxState, {\n          [ListboxStates.Open]: State.Open,\n          [ListboxStates.Closed]: State.Closed,\n        })}\n      >\n        {render({\n          props: passThroughProps,\n          slot,\n          defaultTag: DEFAULT_LISTBOX_TAG,\n          name: 'Listbox',\n        })}\n      </OpenClosedProvider>\n    </ListboxContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'aria-labelledby'\n  | 'disabled'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-listbox-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n          })\n          break\n      }\n    },\n    [dispatch, state, d]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (state.listboxState === ListboxStates.Open) {\n        dispatch({ type: ActionTypes.CloseListbox })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        dispatch({ type: ActionTypes.OpenListbox })\n      }\n    },\n    [dispatch, d, state]\n  )\n\n  let labelledby = useComputed(() => {\n    if (!state.labelRef.current) return undefined\n    return [state.labelRef.current.id, id].join(' ')\n  }, [state.labelRef.current, id])\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: useResolveButtonType(props, state.buttonRef),\n    'aria-haspopup': true,\n    'aria-controls': state.optionsRef.current?.id,\n    'aria-expanded': state.disabled ? undefined : state.listboxState === ListboxStates.Open,\n    'aria-labelledby': labelledby,\n    disabled: state.disabled,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Listbox.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype LabelPropsWeControl = 'id' | 'ref' | 'onClick'\n\nfunction Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl>\n) {\n  let [state] = useListboxContext([Listbox.name, Label.name].join('.'))\n  let id = `headlessui-listbox-label-${useId()}`\n\n  let handleClick = useCallback(() => state.buttonRef.current?.focus({ preventScroll: true }), [\n    state.buttonRef,\n  ])\n\n  let slot = useMemo<LabelRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let propsWeControl = { ref: state.labelRef, id, onClick: handleClick }\n  return render({\n    props: { ...props, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: 'Listbox.Label',\n  })\n}\n\n// ---\n\nlet DEFAULT_OPTIONS_TAG = 'ul' as const\ninterface OptionsRenderPropArg {\n  open: boolean\n}\ntype OptionsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'aria-orientation'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet OptionsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Options = forwardRefWithAs(function Options<\n  TTag extends ElementType = typeof DEFAULT_OPTIONS_TAG\n>(\n  props: Props<TTag, OptionsRenderPropArg, OptionsPropsWeControl> &\n    PropsForFeatures<typeof OptionsRenderFeatures>,\n  ref: Ref<HTMLUListElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Options.name].join('.'))\n  let optionsRef = useSyncRefs(state.optionsRef, ref)\n\n  let id = `headlessui-listbox-options-${useId()}`\n  let d = useDisposables()\n  let searchDisposables = useDisposables()\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return state.listboxState === ListboxStates.Open\n  })()\n\n  useIsoMorphicEffect(() => {\n    let container = state.optionsRef.current\n    if (!container) return\n    if (state.listboxState !== ListboxStates.Open) return\n    if (container === document.activeElement) return\n\n    container.focus({ preventScroll: true })\n  }, [state.listboxState, state.optionsRef])\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLUListElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          if (state.activeOptionIndex !== null) {\n            let { dataRef } = state.options[state.activeOptionIndex]\n            state.propsRef.current.onChange(dataRef.current.value)\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case match(state.orientation, { vertical: Keys.ArrowDown, horizontal: Keys.ArrowRight }):\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Next })\n\n        case match(state.orientation, { vertical: Keys.ArrowUp, horizontal: Keys.ArrowLeft }):\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          return d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [d, dispatch, searchDisposables, state]\n  )\n\n  let labelledby = useComputed(() => state.labelRef.current?.id ?? state.buttonRef.current?.id, [\n    state.labelRef.current,\n    state.buttonRef.current,\n  ])\n\n  let slot = useMemo<OptionsRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeOptionIndex === null ? undefined : state.options[state.activeOptionIndex]?.id,\n    'aria-labelledby': labelledby,\n    'aria-orientation': state.orientation,\n    id,\n    onKeyDown: handleKeyDown,\n    role: 'listbox',\n    tabIndex: 0,\n    ref: optionsRef,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTIONS_TAG,\n    features: OptionsRenderFeatures,\n    visible,\n    name: 'Listbox.Options',\n  })\n})\n\n// ---\n\nlet DEFAULT_OPTION_TAG = 'li' as const\ninterface OptionRenderPropArg {\n  active: boolean\n  selected: boolean\n  disabled: boolean\n}\ntype ListboxOptionPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'aria-selected'\n  | 'onPointerLeave'\n  | 'onMouseLeave'\n  | 'onPointerMove'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in Listbox itself.\n  // But today is not that day..\n  TType = Parameters<typeof Listbox>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, ListboxOptionPropsWeControl | 'value'> & {\n    disabled?: boolean\n    value: TType\n  }\n) {\n  let { disabled = false, value, ...passthroughProps } = props\n  let [state, dispatch] = useListboxContext([Listbox.name, Option.name].join('.'))\n  let id = `headlessui-listbox-option-${useId()}`\n  let active =\n    state.activeOptionIndex !== null ? state.options[state.activeOptionIndex].id === id : false\n  let selected = state.propsRef.current.value === value\n\n  let bag = useRef<ListboxOptionDataRef['current']>({ disabled, value })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n  useIsoMorphicEffect(() => {\n    bag.current.value = value\n  }, [bag, value])\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  let select = useCallback(() => state.propsRef.current.onChange(value), [state.propsRef, value])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterOption, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterOption, id })\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!selected) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n    document.getElementById(id)?.focus?.()\n  }, [state.listboxState])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.listboxState])\n\n  let handleClick = useCallback(\n    (event: { preventDefault: Function }) => {\n      if (disabled) return event.preventDefault()\n      select()\n      dispatch({ type: ActionTypes.CloseListbox })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n    },\n    [dispatch, state.buttonRef, disabled, select]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let slot = useMemo<OptionRenderPropArg>(() => ({ active, selected, disabled }), [\n    active,\n    selected,\n    disabled,\n  ])\n  let propsWeControl = {\n    id,\n    role: 'option',\n    tabIndex: disabled === true ? undefined : -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    'aria-selected': selected === true ? true : undefined,\n    disabled: undefined, // Never forward the `disabled` prop\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTION_TAG,\n    name: 'Listbox.Option',\n  })\n}\n\n// ---\n\nListbox.Button = Button\nListbox.Label = Label\nListbox.Options = Options\nListbox.Option = Option\n"]},"metadata":{},"sourceType":"module"}